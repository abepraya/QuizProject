[{"D:\\JuaraCoding\\latihan\\quisioner\\src\\index.js":"1","D:\\JuaraCoding\\latihan\\quisioner\\src\\App.js":"2","D:\\JuaraCoding\\latihan\\quisioner\\src\\Data\\Model.js":"3","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\RadioButton.js":"4","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\CheckBox.js":"5","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\TextArea.js":"6","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\Menu\\Header.js":"7","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\FormPertanyaan.js":"8","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\FormuliRadio.js":"9","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\FormulirEssay.js":"10","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\FormulirCheckbox.js":"11","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\Category.js":"12","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\Menu\\CategoryQuiz.js":"13","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\ResultNilai.js":"14","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\Preview.js":"15"},{"size":246,"mtime":1611754661836,"results":"16","hashOfConfig":"17"},{"size":1192,"mtime":1611944265373,"results":"18","hashOfConfig":"17"},{"size":902,"mtime":1611809700590,"results":"19","hashOfConfig":"17"},{"size":1675,"mtime":1611885438606,"results":"20","hashOfConfig":"17"},{"size":2129,"mtime":1611883949731,"results":"21","hashOfConfig":"17"},{"size":1489,"mtime":1611946317454,"results":"22","hashOfConfig":"17"},{"size":1079,"mtime":1611952492204,"results":"23","hashOfConfig":"17"},{"size":4239,"mtime":1611946495727,"results":"24","hashOfConfig":"17"},{"size":2723,"mtime":1611940637990,"results":"25","hashOfConfig":"17"},{"size":1482,"mtime":1611940720890,"results":"26","hashOfConfig":"17"},{"size":2041,"mtime":1611952290396,"results":"27","hashOfConfig":"17"},{"size":5587,"mtime":1611953112548,"results":"28","hashOfConfig":"17"},{"size":1748,"mtime":1611945452457,"results":"29","hashOfConfig":"17"},{"size":762,"mtime":1611946395898,"results":"30","hashOfConfig":"17"},{"size":1782,"mtime":1611951901524,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"f1gxoa",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\JuaraCoding\\latihan\\quisioner\\src\\index.js",[],["67","68"],"D:\\JuaraCoding\\latihan\\quisioner\\src\\App.js",["69"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Category from \"./Component/InputForm/Category\";\nimport Header from \"./Component/Menu/Header\";\nimport React, { Component } from \"react\";\nimport CategoryQuiz from \"./Component/Menu/CategoryQuiz\";\nimport FormPertanyaan from \"./Component/TipeSoal/FormPertanyaan\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       linkStatus:[]\n    }\n  }\n  updateLinkStatus=(status)=>{\n    this.setState({linkStatus:status})\n  }\n  \n  render() {\n    return (\n      \n      <div className=\"App\">\n      \n      <Router>\n          <Header linkStatus={this.state.linkStatus} />\n          <Switch>\n            <Route path=\"/question\">\n              <CategoryQuiz updateLinkStatus={this.updateLinkStatus}/>\n            </Route>\n            <Route path=\"/attemptquiz/:type\">\n              <FormPertanyaan updateLinkStatus={this.updateLinkStatus}/>\n            </Route>\n            <Route path=\"/createquiz\">\n          <Category updateLinkStatus={this.updateLinkStatus}/>\n            </Route>\n          </Switch>\n        \n\n      </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\JuaraCoding\\latihan\\quisioner\\src\\Data\\Model.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\RadioButton.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\CheckBox.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\TextArea.js",["70"],"import React, { Component } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\n\r\nclass TextArea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jawaban : \"\",\r\n      code: \"\"\r\n    }\r\n    this.inputText=\"\";\r\n  }\r\n  eventHandler = (event) => {\r\n    \r\n    this.inputText = event.target.value;\r\n    \r\n  };\r\n  addScore = (jawab) => {\r\n    this.props.funcPilihan({\r\n      nomorSoal: this.props.numbering,\r\n      jawaban: jawab,\r\n    });\r\n  };\r\n\r\n  clickSubmit = () => {\r\n    const fn = new Function(this.inputText)\r\n    const resultFn = fn();\r\n    this.setState({ code: resultFn });\r\n    this.addScore(resultFn);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\">\r\n              {this.props.numbering}.&nbsp; {this.props.soal}\r\n            </label>\r\n            <br />\r\n            <textarea\r\n              id=\"textarea\"\r\n              name=\"textarea\"\r\n              rows=\"4\"\r\n              // cols=\"74\"\r\n              // style={{ resize: \"none\" }}\r\n              onChange={this.eventHandler}\r\n            />\r\n            <br/>\r\n            <Button variant=\"warning\" onClick={this.clickSubmit}>\r\n              Submit\r\n            </Button>\r\n          </div>\r\n          {/* <p>Jawaban anda : {this.state.jawaban} </p> */}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\Menu\\Header.js",["71"],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\FormPertanyaan.js",["72","73","74"],"import React, { Component } from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport TextArea from \"./TextArea\";\r\nimport { data } from \"../../Data/Model\";\r\nimport ResultNilai from \"./ResultNilai\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Card, Container } from \"react-bootstrap\";\r\n\r\nclass FormPertanyaan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dataJawaban: [],\r\n      score: 0,\r\n      hasilJawaban: [],\r\n      dataSoal: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.updateLinkStatus([\"\", \"disabled\"]);\r\n    fetch(\"http://localhost:3010/quiz?type=\" + this.props.match.params.type)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ dataSoal: data });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Update Phase\");\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Un-Mounting Phase\");\r\n  }\r\n\r\n  equalsIgnoreOrder = (a, b) => {\r\n    if (a.length !== b.length) {\r\n      return false;\r\n    }\r\n    const uniqueValues = new Set([...a, ...b]);\r\n    for (const v of uniqueValues) {\r\n      const aCount = a.filter((e) => e === v).length;\r\n      const bCount = b.filter((e) => e === v).length;\r\n      if (aCount !== bCount) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  addJawaban = (jawaban) => {\r\n    let newJawaban = this.state.dataJawaban.filter((val) => {\r\n      return val.nomorSoal !== jawaban.nomorSoal;\r\n    });\r\n    newJawaban.push(jawaban);\r\n\r\n    let hasilJawab = this.hitungNilai(newJawaban);\r\n    hasilJawab.sort((a, b) => a.nomorSoal - b.nomorSoal);\r\n    console.log(\"new jawaban :\" + JSON.stringify(newJawaban));\r\n    this.setState({ dataJawaban: newJawaban, hasilJawaban: hasilJawab });\r\n  };\r\n\r\n  hitungNilai = (jawaban) => {\r\n    let tempHasilJawab = [];\r\n    let booleanJawab = \"\";\r\n    jawaban.map((jawab) => {\r\n      switch (this.state.dataSoal[jawab.nomorSoal - 1].type) {\r\n        case \"radio\":\r\n        case \"essay\":\r\n          if (\r\n            jawab.jawaban === this.state.dataSoal[jawab.nomorSoal - 1].kunci\r\n          ) {\r\n            booleanJawab = \"benar\";\r\n          } else {\r\n            booleanJawab = \"salah\";\r\n          }\r\n          break;\r\n        case \"checkbox\":\r\n          if (\r\n            this.equalsIgnoreOrder(\r\n              jawab.jawaban,\r\n              this.state.dataSoal[jawab.nomorSoal - 1].kunci\r\n            )\r\n          ) {\r\n            booleanJawab = \"benar\";\r\n          } else {\r\n            booleanJawab = \"salah\";\r\n          }\r\n          break;\r\n      }\r\n      tempHasilJawab.push({\r\n        \"nomorSoal\": jawab.nomorSoal,\r\n        \"hasil\": booleanJawab,\r\n      });\r\n      booleanJawab = \"\";\r\n    });\r\n    return tempHasilJawab;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"based-background\">\r\n        <Container>\r\n          <p>Jawaban : {JSON.stringify(this.state.dataJawaban)}</p>\r\n          <Card>\r\n            {data.map((posisi, index) => {\r\n              if (posisi.type === \"essay\") {\r\n                return (\r\n                  <TextArea\r\n                    soal={posisi.soal}\r\n                    key={index}\r\n                    numbering={index + 1}\r\n                    funcPilihan={this.addJawaban}\r\n                  />\r\n                );\r\n              } else if (posisi.type === \"radio\") {\r\n                return (\r\n                  <RadioButton\r\n                    data={posisi}\r\n                    key={index}\r\n                    numbering={index + 1}\r\n                    funcPilihan={this.addJawaban}\r\n                  />\r\n                );\r\n              } else if (posisi.type === \"checkbox\") {\r\n                return (\r\n                  <CheckBox\r\n                    data={posisi}\r\n                    key={index}\r\n                    numbering={index + 1}\r\n                    funcPilihan={this.addJawaban}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n            <div className=\"sticky-top\">\r\n              <ResultNilai jawaban={this.state.hasilJawabanSoal} />\r\n            </div>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(FormPertanyaan);\r\n","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\FormuliRadio.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\FormulirEssay.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\FormulirCheckbox.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\Category.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\Menu\\CategoryQuiz.js",[],"D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\TipeSoal\\ResultNilai.js",["75"],"import React, { Component } from \"react\";\r\n\r\nexport default class ResultNilai extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"list-group\">\r\n          {this.props.jawaban.map((jawab) => {\r\n            if (jawab.hasil === \"benar\") {\r\n              return (\r\n                <li className=\"list-group-item bg-primary\">\r\n                  Jawab: {jawab.nomorSoal} {jawab.hasil}\r\n                </li>\r\n              );\r\n            } else if (jawab.hasil === \"salah\") {\r\n              return (\r\n                <li className=\"list-group-item bg-danger\">\r\n                  Jawab: {jawab.nomorSoal} {jawab.hasil}\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\JuaraCoding\\latihan\\quisioner\\src\\Component\\InputForm\\Preview.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":50,"nodeType":"82","messageId":"83","endLine":1,"endColumn":54},{"ruleId":"84","severity":1,"message":"85","line":26,"column":16,"nodeType":"86","messageId":"87","endLine":26,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":10,"column":13,"nodeType":"90","endLine":10,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":70,"column":25,"nodeType":"93","messageId":"94","endLine":70,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":71,"column":7,"nodeType":"97","messageId":"98","endLine":94,"endColumn":8},{"ruleId":"91","severity":1,"message":"99","line":110,"column":39,"nodeType":"93","messageId":"100","endLine":110,"endColumn":41},{"ruleId":"91","severity":1,"message":"99","line":8,"column":43,"nodeType":"93","messageId":"100","endLine":8,"endColumn":45},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]